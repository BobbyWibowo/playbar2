// This file is generated by kconfig_compiler_kf5 from playbar.kcfg.
// All changes you do to this file will be lost.
#ifndef PLAYBARSETTINGS_H
#define PLAYBARSETTINGS_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>

class PlayBarSettings : public KConfigSkeleton {
public:
    class EnumCompactStyle {
    public:
        enum type { Icon, PlaybackButtons, PlayPauseAndSeek, PlayPauseAndInfo, COUNT };
    };
    class EnumBackgroundHint {
    public:
        enum type { None, Normal, Translucent, COUNT };
    };

    static PlayBarSettings *self();
    ~PlayBarSettings();

    /**
      Set CompactStyle
    */
    static
    void setCompactStyle(int v) {
        if (!self()->isImmutable(QStringLiteral("CompactStyle")))
            self()->mCompactStyle = v;
    }

    /**
      Get CompactStyle
    */
    static
    int compactStyle() {
        return self()->mCompactStyle;
    }

    /**
      Set ShowStop
    */
    static
    void setShowStop(bool v) {
        if (!self()->isImmutable(QStringLiteral("ShowStop")))
            self()->mShowStop = v;
    }

    /**
      Get ShowStop
    */
    static
    bool showStop() {
        return self()->mShowStop;
    }

    /**
      Set ShowSeekSlider
    */
    static
    void setShowSeekSlider(bool v) {
        if (!self()->isImmutable(QStringLiteral("ShowSeekSlider")))
            self()->mShowSeekSlider = v;
    }

    /**
      Get ShowSeekSlider
    */
    static
    bool showSeekSlider() {
        return self()->mShowSeekSlider;
    }

    /**
      Set ShowVolumeSlider
    */
    static
    void setShowVolumeSlider(bool v) {
        if (!self()->isImmutable(QStringLiteral("ShowVolumeSlider")))
            self()->mShowVolumeSlider = v;
    }

    /**
      Get ShowVolumeSlider
    */
    static
    bool showVolumeSlider() {
        return self()->mShowVolumeSlider;
    }

    /**
      Set BackgroundHint
    */
    static
    void setBackgroundHint(int v) {
        if (!self()->isImmutable(QStringLiteral("BackgroundHint")))
            self()->mBackgroundHint = v;
    }

    /**
      Get BackgroundHint
    */
    static
    int backgroundHint() {
        return self()->mBackgroundHint;
    }

    /**
      Set ShadowColor
    */
    static
    void setShadowColor(const QColor &v) {
        if (!self()->isImmutable(QStringLiteral("ShadowColor")))
            self()->mShadowColor = v;
    }

    /**
      Get ShadowColor
    */
    static
    QColor shadowColor() {
        return self()->mShadowColor;
    }

    /**
      Set Normal
    */
    static
    void setNormal(bool v) {
        if (!self()->isImmutable(QStringLiteral("Normal")))
            self()->mNormal = v;
    }

    /**
      Get Normal
    */
    static
    bool normal() {
        return self()->mNormal;
    }

    /**
      Set Translucent
    */
    static
    void setTranslucent(bool v) {
        if (!self()->isImmutable(QStringLiteral("Translucent")))
            self()->mTranslucent = v;
    }

    /**
      Get Translucent
    */
    static
    bool translucent() {
        return self()->mTranslucent;
    }

    /**
      Set NoBackground
    */
    static
    void setNoBackground(bool v) {
        if (!self()->isImmutable(QStringLiteral("NoBackground")))
            self()->mNoBackground = v;
    }

    /**
      Get NoBackground
    */
    static
    bool noBackground() {
        return self()->mNoBackground;
    }

protected:
    PlayBarSettings();
    friend class PlayBarSettingsHelper;


    // General
    int mCompactStyle;
    bool mShowStop;
    bool mShowSeekSlider;
    bool mShowVolumeSlider;
    int mBackgroundHint;
    QColor mShadowColor;
    bool mNormal;
    bool mTranslucent;
    bool mNoBackground;

private:
};

#endif

